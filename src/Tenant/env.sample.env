#AFR_ENV=ðŸš€ Loaded from tenant.env.php based on the current detected tenant...

REGISTER_PUT_ENV=false
MUTABLE_OVERWRITE_ENV=true

# settings combine example
MULTI1=foo
MULTI2=${MULTI1}-
MULTI3=${MULTI2}{$AFR_ENV}


### DATABASE CONFIG #######################################################################

# AfrDbConnectionManagerFacade::getInstance()->defineConnectionAlias('test',"mysql:host=192.168.0.21;charset=utf8mb4","git","1234");
AFR_ENV_DBS_JSON='["test|||mysql:host=192.168.0.21;dbname=admin_new;charset=utf8mb4|||git|||1234"]'
# AFR_ENV_DBS_JSON='[["test","mysql:host=192.168.0.21;charset=utf8mb4","git","1234",["PDO.option1","PDO.option2"]],["test2","sqlite:my/database/path/database.db"]]'
# AFRDATALAYERNAMESPACE = 'Autoframe\DataLayer\'



##### $_SESSION ###########################################################################

SES_SUPPRESS_START_FATAL_ERROR=false # defaults to false and will throw an error if the output has already started

## session_start args instead of ini_get(session.*)
SES_MAX_INACTIVE_SECONDS=126144000 #gc_maxlifetime=4Y
SES_HTTP_CACHE_LIMITER=nocache #cache_limiter=nocache  (nocache|public|private|private_no_expire) use only no cache!
SES_COOKIE_LIFETIME_SECONDS=157680000 #cookie_lifetime=5Y or 0, until browser is restarted.
SES_COOKIE_HTTP_ONLY=1 #cookie_httponly=1 protected the session from javascript
SES_COOKIE_SAMESITE=strict #cookie_samesite=strict   production(strict|lax|none)   dev(strict|lax|'')
SES_COOKIE_DOMAIN=*TENANT*  # '' will not be set, (*TENANT*|.*TENANT|.$_SERVER['SERVER_NAME']) will be pulled from AfrTenant::getHost(); and formatted (domain.tld|.domain.tld) subdomains...
SES_PROFILE = gc_maxlifetime=${SES_MAX_INACTIVE_SECONDS}&sid_bits_per_character=6&sid_length=40&name=AFRSSID&cache_limiter=${SES_HTTP_CACHE_LIMITER}&cookie_lifetime=${SES_COOKIE_LIFETIME_SECONDS}&cookie_path=/&cookie_domain=${SES_COOKIE_DOMAIN}&cookie_httponly=${SES_COOKIE_HTTP_ONLY}&cookie_secure=1&cookie_samesite=${SES_COOKIE_SAMESITE}

### SES_PROFILE =  # IF NOT EMPTY, AFR WILL CALL session_start(), else no session
# SES_PROFILE = gc_maxlifetime=126144000&sid_bits_per_character=6&sid_length=40&name=AFRSSID&cache_limiter=nocache&cookie_lifetime=157680000&cookie_path=/&cookie_domain=*TENANT*&cookie_secure=1&cookie_httponly=1&cookie_samesite=strict
# SES_PROFILE = gc_maxlifetime=86400&sid_bits_per_character=5&sid_length=40&name=AFRSSID&cache_limiter=nocache&cookie_lifetime=172800&cookie_path=/&cookie_httponly=1&cookie_secure=0&cookie_samesite=


## DB SESSION or CUSTOM SESSION read src/Session/SESSION.MD
# SES_SET_SAVE_HANDLER = '\NameSpace\Afr\HandlerImplementationSingleton,1|0'  # FQCN singleton class , (bool)1|0
#actually calls session_set_save_handler(\NameSpace\Afr\HandlerImplementationSingleton::getInstance(), $register_shutdown_Fn = (bool)1|0);
#session_set_save_handler(SessionHandlerInterface+SessionUpdateTimestampHandlerInterface, $register_shutdown = true)

## EMBEDDED SESSION HANDLERS read src/Session/SESSION.MD
# SES_MODULE_NAME = memcache   #session_module_name('memcache');  files|memcache|memcached|sqlite|user(set.by.save.handler)
# SES_SAVE_PATH = localhost:11211    #session_save_path(/tmp/path|'localhost:11211,otherHost:11211'|/x/sqlite.db);




##### AfrEvent ###########################################################################

AFR_EVENT_X_TRACE = true #backtrace enable tracing based on depth unless flag configured in TENANT.AfrEvent.php
AFR_EVENT_DEFAULT_TRACE_DEPTH = 0 #backtrace log of 0 for all events not configured with flags or own env
AFR_EVENT_TRACE_DEPTH_SOME_XYZ_EVENT = 15  #custom depth: AFR_EVENT_TRACE_DEPTH_preg_replace("/[^A-Za-z0-9_]/", '_', strtoupper($sEvent));

# event collect args, unless flag configured in TENANT.AfrEvent.php
AFR_EVENT_X_ARGS_SOME_XYZ_EVENT = true  #custom collect args AFR_EVENT_X_ARGS_preg_replace("/[^A-Za-z0-9_]/", '_', strtoupper($sEvent));

AFR_EVENT_X_COLLECT_WILDCARDS_INFO = false
AFR_EVENT_EXCEPTION_IS_FATAL_ERROR = true # for closure binding in scope
AFR_EVENT_X_CLOSURE_RESULTS = false # collect closure return results here


##### ????????? ###########################################################################

HTTP_HEADER_RESPONSE_CODE_ERROR_IS_CRITICAL = true
AFR_BEHIND_LOAD_BALANCER_OR_REVERSE_PROXY = false
